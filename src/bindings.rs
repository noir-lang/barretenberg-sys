/* automatically generated by rust-bindgen 0.64.0 */

extern "C" {
    pub fn acir_proofs_get_solidity_verifier(
        g2x: *const u8,
        vk_buf: *const u8,
        output_buf: *mut *mut u8,
    ) -> usize;
}
extern "C" {
    pub fn acir_proofs_get_exact_circuit_size(constraint_system_buf: *const u8) -> u32;
}
extern "C" {
    pub fn pedersen_hash__init();
}
extern "C" {
    pub fn acir_proofs_get_total_circuit_size(constraint_system_buf: *const u8) -> u32;
}
extern "C" {
    pub fn acir_proofs_init_proving_key(
        constraint_system_buf: *const u8,
        pk_buf: *mut *const u8,
    ) -> usize;
}
extern "C" {
    pub fn acir_proofs_init_verification_key(
        pippenger: *mut ::std::os::raw::c_void,
        g2x: *const u8,
        pk_buf: *const u8,
        vk_buf: *mut *const u8,
    ) -> usize;
}
extern "C" {
    pub fn acir_proofs_new_proof(
        pippenger: *mut ::std::os::raw::c_void,
        g2x: *const u8,
        pk_buf: *const u8,
        constraint_system_buf: *const u8,
        witness_buf: *const u8,
        proof_data_buf: *mut *mut u8,
    ) -> usize;
}
extern "C" {
    pub fn acir_proofs_verify_proof(
        g2x: *const u8,
        vk_buf: *const u8,
        constraint_system_buf: *const u8,
        proof: *mut u8,
        length: u32,
    ) -> bool;
}
extern "C" {
    pub fn blake2s_to_field(data: *const u8, length: usize, r: *mut u8);
}
extern "C" {
    pub fn pedersen_plookup_compress_fields(left: *const u8, right: *const u8, result: *mut u8);
}
extern "C" {
    pub fn pedersen_plookup_compress(inputs_buffer: *const u8, output: *mut u8);
}
extern "C" {
    pub fn pedersen_plookup_commit(inputs_buffer: *const u8, output: *mut u8);
}
extern "C" {
    pub fn compute_public_key(private_key: *const u8, public_key_buf: *mut u8);
}
extern "C" {
    pub fn construct_signature(
        message: *const u8,
        msg_len: usize,
        private_key: *const u8,
        s: *mut u8,
        e: *mut u8,
    );
}
extern "C" {
    pub fn verify_signature(
        message: *const u8,
        msg_len: usize,
        pub_key: *const u8,
        sig_s: *const u8,
        sig_e: *const u8,
    ) -> bool;
}
extern "C" {
    pub fn new_pippenger(points: *mut u8, num_points: usize) -> *mut ::std::os::raw::c_void;
}
